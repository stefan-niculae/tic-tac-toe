{"version":3,"sources":["../ripple.js"],"names":["rippleOnClick","event","surface","find","length","prepend","ink","removeClass","height","width","d","Math","max","outerWidth","outerHeight","css","x","pageX","offset","left","y","pageY","top","rippleColor","data","background","addClass","setTimeout"],"mappings":"AAAA;AACA;AACA,IAAIA,gBAAgB,CAACC,KAAD,EAAQC,OAAR,KAAoB;AACpC;AACA,QAAIA,QAAQC,IAAR,CAAa,aAAb,EAA4BC,MAA5B,KAAuC,CAA3C,EACIF,QAAQG,OAAR,CAAgB,gCAAhB;;AAEJ,QAAIC,MAAMJ,QAAQC,IAAR,CAAa,aAAb,CAAV;;AAEA;AACAG,QAAIC,WAAJ,CAAgB,SAAhB;;AAEA;AACA,QAAI,CAACD,IAAIE,MAAJ,EAAD,IAAiB,CAACF,IAAIG,KAAJ,EAAtB,EAAmC;AAC/B;AACA;AACA,YAAIC,IAAIC,KAAKC,GAAL,CAASV,QAAQW,UAAR,EAAT,EAA+BX,QAAQY,WAAR,EAA/B,CAAR;AACAR,YAAIS,GAAJ,CAAQ,EAACP,QAAQE,CAAT,EAAYD,OAAOC,CAAnB,EAAR;AACH;;AAED;AACA;AACA;AACA;AACA;AACA,QAAIM,IAAIf,MAAMgB,KAAN,GAAcf,QAAQgB,MAAR,GAAiBC,IAA/B,GAAuCb,IAAIG,KAAJ,KAAc,CAA7D;AACA,QAAIW,IAAInB,MAAMoB,KAAN,GAAcnB,QAAQgB,MAAR,GAAiBI,GAA/B,GAAsChB,IAAIE,MAAJ,KAAe,CAA7D;;AAEA,QAAIe,cAAcrB,QAAQsB,IAAR,CAAa,cAAb,CAAlB;;AAEA;AACAlB,QAAIS,GAAJ,CAAQ;AACJO,aAAKF,IAAI,IADL;AAEJD,cAAMH,IAAI,IAFN;AAGJS,oBAAYF;AAHR,KAAR,EAIGG,QAJH,CAIY,SAJZ;;AAMAC,eAAW,MAAMzB,QAAQwB,QAAR,CAAiB,gBAAjB,CAAjB,EAAqD,GAArD;AACH,CApCD","file":"ripple.js","sourcesContent":["// https://github.com/balintsoos/material-ripple\n// Material Ripple effect\nvar rippleOnClick = (event, surface) => {\n    // create .ink element if it doesn't exist\n    if (surface.find(\".ripple-ink\").length === 0)\n        surface.prepend(\"<div class='ripple-ink'></div>\");\n\n    let ink = surface.find('.ripple-ink')\n\n    // in case of quick double clicks stop the previous animation\n    ink.removeClass(\"animate\");\n\n    // set size of .ink\n    if (!ink.height() && !ink.width()) {\n        // use surface's width or height whichever is larger for\n        // the diameter to make a circle which can cover the entire element\n        let d = Math.max(surface.outerWidth(), surface.outerHeight())\n        ink.css({height: d, width: d});\n    }\n\n    // get click coordinates\n    // Logic:\n    // click coordinates relative to page minus\n    // surface's position relative to page minus\n    // half of self height/width to make it controllable from the center\n    let x = event.pageX - surface.offset().left - (ink.width() / 2)\n    let y = event.pageY - surface.offset().top - (ink.height() / 2)\n\n    let rippleColor = surface.data('ripple-color')\n\n    //set the position and add class .animate\n    ink.css({\n        top: y + 'px',\n        left: x + 'px',\n        background: rippleColor\n    }).addClass(\"animate\");\n\n    setTimeout(() => surface.addClass('noninteractive'), 500)\n}\n"]}